Notebook[{

Cell[CellGroupData[{
Cell["BoolEval", "Title"],

Cell[TextData[{
 "BoolEval and BoolPick are meant to be used with arrays (of any dimension) \
that contain ",
 StyleBox["only numbers",
  FontSlant->"Italic"],
 ", primarily with large packed arrays.  The main feature is retaining both \
readable and convenient notation and the high performance achievable by the \
use of UnitStep, Plus and Times to expresses element-wide conditions.\n\nSee ",
 ButtonBox["http://mathematica.stackexchange.com/q/2821/12",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/q/2821/12"], None},
  ButtonNote->"http://mathematica.stackexchange.com/q/2821/12"],
 " for the inspiration."
}], "Text"],

Cell[CellGroupData[{

Cell["Usage examples", "Section"],

Cell[BoxData[
 RowBox[{"<<", "BoolEval`"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"array", "=", 
   RowBox[{"Range", "[", "10", "]"}]}], ";"}]], "Input"],

Cell["\<\
Compute an array which has 1s where the condition is satisfied and zeros \
elsewhere:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolEval", "[", 
  RowBox[{"array", ">", "3"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1"}], "}"}]], "Output"]
}, Open  ]],

Cell["Filter an array on a condition:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolPick", "[", 
  RowBox[{"array", ",", 
   RowBox[{"array", ">", "3"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell["Use more complex conditions:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolPick", "[", 
  RowBox[{"array", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"array", ",", "3"}], "]"}], "\[Equal]", "1"}], "&&", 
    RowBox[{"array", "<", "5"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4"}], "}"}]], "Output"]
}, Open  ]],

Cell["Count how many elements satisfy a condition:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolCount", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"array", ",", "3"}], "]"}], "\[Equal]", "1"}], "&&", 
   RowBox[{"array", "<", "5"}]}], "]"}]], "Input"],

Cell[BoxData["2"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Performance", "Section"],

Cell[BoxData[
 RowBox[{
  RowBox[{"array", "=", 
   RowBox[{"Range", "[", "1000000", "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"result1", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"array", ",", 
      RowBox[{
       RowBox[{"#", ">", "123456"}], "&"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.456197`", ",", "Null"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"result2", "=", 
    RowBox[{"BoolPick", "[", 
     RowBox[{"array", ",", 
      RowBox[{"array", ">", "123456"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.022627`", ",", "Null"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "===", "result2"}]], "Input"],

Cell[BoxData["True"], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible issues", "Section"],

Cell[TextData[{
 "The meaning of relational operators (",
 Cell[BoxData[
  FormBox[
   RowBox[{">", 
    RowBox[{",", 
     RowBox[{"\[GreaterEqual]", 
      RowBox[{",", "\[Equal]"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc.) and logical operators (",
 Cell[BoxData[
  FormBox[
   RowBox[{"&&", 
    RowBox[{",", 
     RowBox[{"||", 
      RowBox[{",", "!"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", etc.) is overloaded within ",
 Cell[BoxData[
  FormBox["BoolEval", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The expression passed to BoolEval should be considered a domain specific \
language where the behaviour of these operations is modified."
}], "Text"],

Cell[TextData[{
 "For this reason, any program code that uses these operations must be \
avoided within ",
 Cell[BoxData[
  FormBox["BoolEval", TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". For example, the following will fail without error messages:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolEval", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Range", "[", "100", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"OddQ", "[", "#", "]"}], "||", 
       RowBox[{"#", "\[Equal]", "2"}]}], "&"}]}], "]"}], "<", "10"}], 
  "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "The solution is to compute the array first, and use it on ",
 Cell[BoxData[
  FormBox["BoolEval", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " afterwards:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"array", "=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Range", "[", "100", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"OddQ", "[", "#", "]"}], "||", 
      RowBox[{"#", "\[Equal]", "2"}]}], "&"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "5", ",", "7", ",", "9", ",", "11", ",", "13",
    ",", "15", ",", "17", ",", "19", ",", "21", ",", "23", ",", "25", ",", 
   "27", ",", "29", ",", "31", ",", "33", ",", "35", ",", "37", ",", "39", 
   ",", "41", ",", "43", ",", "45", ",", "47", ",", "49", ",", "51", ",", 
   "53", ",", "55", ",", "57", ",", "59", ",", "61", ",", "63", ",", "65", 
   ",", "67", ",", "69", ",", "71", ",", "73", ",", "75", ",", "77", ",", 
   "79", ",", "81", ",", "83", ",", "85", ",", "87", ",", "89", ",", "91", 
   ",", "93", ",", "95", ",", "97", ",", "99"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolEval", "[", 
  RowBox[{"array", "<", "10"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoolPick", "[", 
  RowBox[{"array", ",", 
   RowBox[{"array", "<", "10"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "7", ",", "9"}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{Automatic, 213}, {150, Automatic}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
TrackCellChangeTimes->False,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]

